# -*- coding: utf-8 -*-
"""LVADSUSR91_Jayapriyaa_lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ItXqgTm7_sXYRZN0u-Dd9wJxfzB0yJ3I
"""

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import OneHotEncoder
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
import numpy as np

#1 Handling missing values

df=pd.read_csv('/content/expenses.csv')
print(df.isnull().sum())#sum of null values in each attributes

df=df.drop_duplicates()
print('total duplicated rows:',df.duplicated().sum())

df.head()

#2 Encoding

df1 = df.copy()

# Initialize LabelEncoder
lb = LabelEncoder()

# Perform label encoding
df1['sex'] = lb.fit_transform(df['sex'])
df1['smoker'] = lb.fit_transform(df['smoker'])
df1['region'] = lb.fit_transform(df['region'])
print("\nDataFrame after Label Encoding:")
print(df1)

#3 Feature selection ()
X = df1.drop('charges', axis=1)
y = df1['charges']

#4 Data splitting
X = df1.drop('charges', axis=1)
y = df1['charges']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

#5 Linear Regression
print("\nLinear Regression Model")
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)
y_pred = lin_reg.predict(X_test)

#6 Model Evaluation

mse = round(mean_squared_error(y_test, y_pred))
print("Mean Squared Error:", mse)